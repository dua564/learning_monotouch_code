// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace MTNotes {
	
	
	// Base type probably should be MonoTouch.UIKit.UIViewController or subclass
	[MonoTouch.Foundation.Register("NoteDetailControllerIPad")]
	public partial class NoteDetailControllerIPad {
		
		private MonoTouch.UIKit.UIView __mt_view;
		
		private MonoTouch.UIKit.UITextField __mt_titleTextField;
		
		private MonoTouch.UIKit.UITextView __mt_bodyTextView;
		
		private MonoTouch.UIKit.UIToolbar __mt_toolbar;
		
		private MonoTouch.UIKit.UIBarButtonItem __mt_saveButton;
		
		private MonoTouch.UIKit.UIBarButtonItem __mt_addButton;
		
		private MonoTouch.UIKit.UIBarButtonItem __mt_setColorButton;
		
		#pragma warning disable 0169
		[MonoTouch.Foundation.Connect("view")]
		private MonoTouch.UIKit.UIView view {
			get {
				this.__mt_view = ((MonoTouch.UIKit.UIView)(this.GetNativeField("view")));
				return this.__mt_view;
			}
			set {
				this.__mt_view = value;
				this.SetNativeField("view", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("titleTextField")]
		private MonoTouch.UIKit.UITextField titleTextField {
			get {
				this.__mt_titleTextField = ((MonoTouch.UIKit.UITextField)(this.GetNativeField("titleTextField")));
				return this.__mt_titleTextField;
			}
			set {
				this.__mt_titleTextField = value;
				this.SetNativeField("titleTextField", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("bodyTextView")]
		private MonoTouch.UIKit.UITextView bodyTextView {
			get {
				this.__mt_bodyTextView = ((MonoTouch.UIKit.UITextView)(this.GetNativeField("bodyTextView")));
				return this.__mt_bodyTextView;
			}
			set {
				this.__mt_bodyTextView = value;
				this.SetNativeField("bodyTextView", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("toolbar")]
		private MonoTouch.UIKit.UIToolbar toolbar {
			get {
				this.__mt_toolbar = ((MonoTouch.UIKit.UIToolbar)(this.GetNativeField("toolbar")));
				return this.__mt_toolbar;
			}
			set {
				this.__mt_toolbar = value;
				this.SetNativeField("toolbar", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("saveButton")]
		private MonoTouch.UIKit.UIBarButtonItem saveButton {
			get {
				this.__mt_saveButton = ((MonoTouch.UIKit.UIBarButtonItem)(this.GetNativeField("saveButton")));
				return this.__mt_saveButton;
			}
			set {
				this.__mt_saveButton = value;
				this.SetNativeField("saveButton", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("addButton")]
		private MonoTouch.UIKit.UIBarButtonItem addButton {
			get {
				this.__mt_addButton = ((MonoTouch.UIKit.UIBarButtonItem)(this.GetNativeField("addButton")));
				return this.__mt_addButton;
			}
			set {
				this.__mt_addButton = value;
				this.SetNativeField("addButton", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("setColorButton")]
		private MonoTouch.UIKit.UIBarButtonItem setColorButton {
			get {
				this.__mt_setColorButton = ((MonoTouch.UIKit.UIBarButtonItem)(this.GetNativeField("setColorButton")));
				return this.__mt_setColorButton;
			}
			set {
				this.__mt_setColorButton = value;
				this.SetNativeField("setColorButton", value);
			}
		}
	}
}
